name: Build and Deploy Orchestrator Application - Upon Terraform Create

on: [workflow_dispatch]

jobs:
  enable-https:
    name: Build and Deploy Orchestrator Application
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_email: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
        service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
        export_default_credentials: true

    # Configure Docker with Credentials
    - name: Orchestrator - Configure Docker
      run: |
        gcloud auth configure-docker

    # Setup dotnet env.
    - uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '3.1.x'

    # Build the Dotnet binaries and build docker image and publish
    - name: Orchestrator - Build and Publish
      working-directory: orchestrator-service/services/ServicePixelStreamingOrchestrator
      run: |
        mkdir output
        dotnet restore ServicePixelStreamingOrchestrator.csproj
        dotnet publish ServicePixelStreamingOrchestrator.csproj --runtime alpine-x64 --configuration Release --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -o output/app/out
        
        cp Dockerfile output
        cp -r Views output/public

        cd output
        
        gcloud config set project ${{ secrets.GOOGLE_CLOUD_PROJECT }}
        gcloud builds submit --tag gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/${{ secrets.ORCHESTRATOR_CONTAINER_NAME }}:latest
    
    # Terraform Init for being able to use terraform output INSTANCES_PRIVATE_SSH_KEY
    - name: Terraform Init
      working-directory: terraform
      id: init
      run: terraform init -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}" -backend-config="prefix=terraform/state-${{ secrets.VM_NAME_PREFIX }}"

    # Deploy the orchestrator image to the Cloud Run
    - name: Orchestrator - Deploy
      run: |
        ORCHESTRATOR_VM_ZONE=$(cut -d',' -f1 <<<'${{ secrets.VM_ZONES }}')
        GOOGLE_PLAIN_CREDENTIALS="echo -n ${{ secrets.GOOGLE_CREDENTIALS }} | od -A n -t x1 | sed 's/ *//g'"
        COMPUTE_ENGINE_PLAIN_SSH_PRIVATE_KEY="$(terraform output -raw INSTANCES_PRIVATE_SSH_KEY)"
        gcloud compute ssh --project=${{ secrets.GOOGLE_CLOUD_PROJECT }} ${{ secrets.VM_NAME_PREFIX }}-orchestrator --zone=$ORCHESTRATOR_VM_ZONE --quiet --command="sudo bash /opt/scripts/docker_update.sh 8080 ${{ secrets.GOOGLE_CLOUD_PROJECT }} ${{ secrets.ORCHESTRATOR_CONTAINER_NAME }} ServicePixelStreamingOrchestrator ${{ secrets.VM_ZONES }} ${{ secrets.VM_NAME_PREFIX }} ${{ secrets.PIXEL_STREAMING_UNREAL_CONTAINER_IMAGE_NAME }} ${{ secrets.MAX_USER_SESSION_PER_INSTANCE }} $COMPUTE_ENGINE_PLAIN_SSH_PRIVATE_KEY $GOOGLE_PLAIN_CREDENTIALS"